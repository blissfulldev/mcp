services:
  aws-diagram:
    build:
      context: ./src/aws-diagram-mcp-server
      dockerfile: Dockerfile
    container_name: aws-diagram
    ports:
      - "8001:8001"
    networks:
      - mcp_net
    environment:
      DIAGRAMS_DATA_DIR: ${DIAGRAMS_DATA_DIR:-/data/diagrams}
    volumes:
      - ${DIAGRAMS_HOST_PATH:-/home/DevOps/Projects/devops-ai/workspace/generated-diagrams}:${DIAGRAMS_DATA_DIR:-/data/diagrams}
  
  core-mcp:
    build:
      context: ./src/core-mcp-server
      dockerfile: Dockerfile
    container_name: core-mcp
    ports:
      - "8000:8000"
    networks:
      - mcp_net
    environment:
      aws-foundation: "true"
      dev-tools: "true"
      ci-cd-devops: "true"
      container-orchestration: "true"
      serverless-architecture: "true"
      solutions-architect: "true"
      security-identity: "true"

  terraform-mcp:
    build:
      context: ./src/terraform-mcp-server
      dockerfile: Dockerfile
    container_name: terraform-mcp
    ports:
      - "8002:8002"
    networks:
      - mcp_net
    environment:
      TERRAFORM_DATA_DIR: ${TERRAFORM_DATA_DIR:-/data/terraform}
    volumes:
      - ${TERRAFORM_HOST_PATH:-/home/DevOps/Projects/devops-ai/workspace/terraform-projects}:${TERRAFORM_DATA_DIR:-/data/terraform}

networks:
  mcp_net:
    external: true
    name: mcp_net
    driver: bridge
